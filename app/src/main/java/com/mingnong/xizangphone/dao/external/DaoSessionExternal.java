package com.mingnong.xizangphone.dao.external;

import com.mingnong.xizangphone.dao.CodeAnimal;
import com.mingnong.xizangphone.dao.CodeProduct;
import com.mingnong.xizangphone.dao.CodeXD;
import com.mingnong.xizangphone.dao.Coder;
import com.mingnong.xizangphone.dao.Printer;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSessionExternal extends AbstractDaoSession {

    private final DaoConfig codeAnimalDaoConfig;
    private final DaoConfig codeProductDaoConfig;
    private final DaoConfig coderDaoConfig;
    private final DaoConfig printerDaoConfig;
//    private final DaoConfig unitDaoConfig;

    private final CodeAnimalDao codeAnimalDao;
    private final CodeProductDao codeProductDao;
    private final CoderDao coderDao;
    private final PrinterDao printerDao;
//    private final UnitDao unitDao;

    public DaoSessionExternal(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);


        codeAnimalDaoConfig = daoConfigMap.get(CodeAnimalDao.class).clone();
        codeAnimalDaoConfig.initIdentityScope(type);

        codeProductDaoConfig = daoConfigMap.get(CodeProductDao.class).clone();
        codeProductDaoConfig.initIdentityScope(type);

        coderDaoConfig = daoConfigMap.get(CoderDao.class).clone();
        coderDaoConfig.initIdentityScope(type);


        printerDaoConfig = daoConfigMap.get(PrinterDao.class).clone();
        printerDaoConfig.initIdentityScope(type);


//        unitDaoConfig = daoConfigMap.get(UnitDao.class).clone();
//        unitDaoConfig.initIdentityScope(type);

        codeAnimalDao = new CodeAnimalDao(codeAnimalDaoConfig, this);
        codeProductDao = new CodeProductDao(codeProductDaoConfig, this);
        coderDao = new CoderDao(coderDaoConfig, this);
        printerDao = new PrinterDao(printerDaoConfig, this);
//        unitDao = new UnitDao(unitDaoConfig, this);

        registerDao(CodeAnimal.class, codeAnimalDao);
        registerDao(CodeProduct.class, codeProductDao);
        registerDao(Coder.class, coderDao);
        registerDao(Printer.class, printerDao);
//        registerDao(Unit.class, unitDao);
    }


    public void clear() {
        codeAnimalDaoConfig.clearIdentityScope();
        codeProductDaoConfig.clearIdentityScope();
        coderDaoConfig.clearIdentityScope();
        printerDaoConfig.clearIdentityScope();
//        unitDaoConfig.clearIdentityScope();
    }


    public CodeAnimalDao getCodeAnimalDao() {
        return codeAnimalDao;
    }

    public CodeProductDao getCodeProductDao() {
        return codeProductDao;
    }

    public CoderDao getCoderDao() {
        return coderDao;
    }

    public PrinterDao getPrinterDao() {
        return printerDao;
    }


//    public UnitDao getUnitDao() {
//        return unitDao;
//    }

}
