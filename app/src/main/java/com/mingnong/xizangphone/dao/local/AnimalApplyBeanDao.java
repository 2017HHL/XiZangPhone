package com.mingnong.xizangphone.dao.local;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.mingnong.xizangphone.dao.AnimalApplyBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "AnimalApplyBean".
*/
public class AnimalApplyBeanDao extends AbstractDao<AnimalApplyBean, Long> {

    public static final String TABLENAME = "AnimalApplyBean";

    /**
     * Properties of entity AnimalApplyBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property FStId = new Property(1, String.class, "FStId", false, "FST_ID");
        public final static Property QDWType = new Property(2, String.class, "QDWType", false, "QDWTYPE");
        public final static Property QDWNumber = new Property(3, String.class, "QDWNumber", false, "QDWNUMBER");
        public final static Property QDWCargoOwner = new Property(4, String.class, "QDWCargoOwner", false, "QDWCARGO_OWNER");
        public final static Property QDWPhone = new Property(5, String.class, "QDWPhone", false, "QDWPHONE");
        public final static Property QDWXuZhong = new Property(6, String.class, "QDWXuZhong", false, "QDWXU_ZHONG");
        public final static Property QDWXuZhongOne = new Property(7, String.class, "QDWXuZhongOne", false, "QDWXU_ZHONG_ONE");
        public final static Property QDWXuZhongTwo = new Property(8, String.class, "QDWXuZhongTwo", false, "QDWXU_ZHONG_TWO");
        public final static Property QDWQuantity = new Property(9, int.class, "QDWQuantity", false, "QDWQUANTITY");
        public final static Property FSmemo1 = new Property(10, String.class, "FSmemo1", false, "FSMEMO1");
        public final static Property QDWDanWei = new Property(11, String.class, "QDWDanWei", false, "QDWDAN_WEI");
        public final static Property QDWYongTu = new Property(12, String.class, "QDWYongTu", false, "QDWYONG_TU");
        public final static Property QDWLaiYuan = new Property(13, String.class, "QDWLaiYuan", false, "QDWLAI_YUAN");
        public final static Property QDWShengQy = new Property(14, String.class, "QDWShengQy", false, "QDWSHENG_QY");
        public final static Property QDWShiQy = new Property(15, String.class, "QDWShiQy", false, "QDWSHI_QY");
        public final static Property QDWXianQy = new Property(16, String.class, "QDWXianQy", false, "QDWXIAN_QY");
        public final static Property QDWXiangQy = new Property(17, String.class, "QDWXiangQy", false, "QDWXIANG_QY");
        public final static Property QDWCunQy = new Property(18, String.class, "QDWCunQy", false, "QDWCUN_QY");
        public final static Property QDWTypeQy = new Property(19, String.class, "QDWTypeQy", false, "QDWTYPE_QY");
        public final static Property QDAddQy = new Property(20, String.class, "QDAddQy", false, "QDADD_QY");
        public final static Property QDWShengDd = new Property(21, String.class, "QDWShengDd", false, "QDWSHENG_DD");
        public final static Property QDWShiDd = new Property(22, String.class, "QDWShiDd", false, "QDWSHI_DD");
        public final static Property QDWXianDd = new Property(23, String.class, "QDWXianDd", false, "QDWXIAN_DD");
        public final static Property QDWXsqDd = new Property(24, String.class, "QDWXsqDd", false, "QDWXSQ_DD");
        public final static Property QDWXiangDd = new Property(25, String.class, "QDWXiangDd", false, "QDWXIANG_DD");
        public final static Property QDWCunDd = new Property(26, String.class, "QDWCunDd", false, "QDWCUN_DD");
        public final static Property QDWTypeDd = new Property(27, String.class, "QDWTypeDd", false, "QDWTYPE_DD");
        public final static Property QDWAddDd = new Property(28, String.class, "QDWAddDd", false, "QDWADD_DD");
        public final static Property QDWChengYunRen = new Property(29, String.class, "QDWChengYunRen", false, "QDWCHENG_YUN_REN");
        public final static Property QDWCyrDianHua = new Property(30, String.class, "QDWCyrDianHua", false, "QDWCYR_DIAN_HUA");
        public final static Property QDWYunZai = new Property(31, String.class, "QDWYunZai", false, "QDWYUN_ZAI");
        public final static Property QDWTrademark = new Property(32, String.class, "QDWTrademark", false, "QDWTRADEMARK");
        public final static Property QDWDisinfection = new Property(33, String.class, "QDWDisinfection", false, "QDWDISINFECTION");
        public final static Property QDWErBiaoHao = new Property(34, String.class, "QDWErBiaoHao", false, "QDWER_BIAO_HAO");
        public final static Property DateQF = new Property(35, String.class, "DateQF", false, "DATE_QF");
        public final static Property DateQy = new Property(36, String.class, "DateQy", false, "DATE_QY");
        public final static Property FSm5 = new Property(37, String.class, "FSm5", false, "FSM5");
        public final static Property Highway = new Property(38, String.class, "Highway", false, "HIGHWAY");
        public final static Property Railway = new Property(39, String.class, "Railway", false, "RAILWAY");
        public final static Property Waterway = new Property(40, String.class, "Waterway", false, "WATERWAY");
        public final static Property Aviation = new Property(41, String.class, "Aviation", false, "AVIATION");
        public final static Property QDWAccepted = new Property(42, String.class, "QDWAccepted", false, "QDWACCEPTED");
        public final static Property QDWAddress = new Property(43, String.class, "QDWAddress", false, "QDWADDRESS");
        public final static Property QDWLiYou = new Property(44, String.class, "QDWLiYou", false, "QDWLI_YOU");
        public final static Property QDWAttn = new Property(45, String.class, "QDWAttn", false, "QDWATTN");
        public final static Property QDWJBRDianHua = new Property(46, String.class, "QDWJBRDianHua", false, "QDWJBRDIAN_HUA");
        public final static Property DateNpy = new Property(47, String.class, "DateNpy", false, "DATE_NPY");
        public final static Property DateJL = new Property(48, String.class, "DateJL", false, "DATE_JL");
        public final static Property QResults = new Property(49, String.class, "QResults", false, "QRESULTS");
        public final static Property QRemarks = new Property(50, String.class, "QRemarks", false, "QREMARKS");
        public final static Property QLMSNumber = new Property(51, int.class, "QLMSNumber", false, "QLMSNUMBER");
        public final static Property QCHYin = new Property(52, int.class, "QCHYin", false, "QCHYIN");
        public final static Property QCHYang = new Property(53, int.class, "QCHYang", false, "QCHYANG");
        public final static Property QPayleanYin = new Property(54, int.class, "QPayleanYin", false, "QPAYLEAN_YIN");
        public final static Property QPayleanYang = new Property(55, int.class, "QPayleanYang", false, "QPAYLEAN_YANG");
        public final static Property QsalbutamolYin = new Property(56, int.class, "QsalbutamolYin", false, "QSALBUTAMOL_YIN");
        public final static Property QsalbutamolYang = new Property(57, int.class, "QsalbutamolYang", false, "QSALBUTAMOL_YANG");
        public final static Property FLongitude = new Property(58, Double.class, "FLongitude", false, "FLONGITUDE");
        public final static Property FLatitude = new Property(59, Double.class, "FLatitude", false, "FLATITUDE");
        public final static Property FLName = new Property(60, String.class, "FLName", false, "FLNAME");
        public final static Property GPSunitUstrId = new Property(61, String.class, "GPSunitUstrId", false, "GPSUNIT_USTR_ID");
        public final static Property IsPrant = new Property(62, String.class, "IsPrant", false, "IS_PRANT");
        public final static Property FSuserName = new Property(63, String.class, "FSuserName", false, "FSUSER_NAME");
    }


    public AnimalApplyBeanDao(DaoConfig config) {
        super(config);
    }
    
    public AnimalApplyBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"AnimalApplyBean\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"FST_ID\" TEXT," + // 1: FStId
                "\"QDWTYPE\" TEXT," + // 2: QDWType
                "\"QDWNUMBER\" TEXT," + // 3: QDWNumber
                "\"QDWCARGO_OWNER\" TEXT," + // 4: QDWCargoOwner
                "\"QDWPHONE\" TEXT," + // 5: QDWPhone
                "\"QDWXU_ZHONG\" TEXT," + // 6: QDWXuZhong
                "\"QDWXU_ZHONG_ONE\" TEXT," + // 7: QDWXuZhongOne
                "\"QDWXU_ZHONG_TWO\" TEXT," + // 8: QDWXuZhongTwo
                "\"QDWQUANTITY\" INTEGER NOT NULL ," + // 9: QDWQuantity
                "\"FSMEMO1\" TEXT," + // 10: FSmemo1
                "\"QDWDAN_WEI\" TEXT," + // 11: QDWDanWei
                "\"QDWYONG_TU\" TEXT," + // 12: QDWYongTu
                "\"QDWLAI_YUAN\" TEXT," + // 13: QDWLaiYuan
                "\"QDWSHENG_QY\" TEXT," + // 14: QDWShengQy
                "\"QDWSHI_QY\" TEXT," + // 15: QDWShiQy
                "\"QDWXIAN_QY\" TEXT," + // 16: QDWXianQy
                "\"QDWXIANG_QY\" TEXT," + // 17: QDWXiangQy
                "\"QDWCUN_QY\" TEXT," + // 18: QDWCunQy
                "\"QDWTYPE_QY\" TEXT," + // 19: QDWTypeQy
                "\"QDADD_QY\" TEXT," + // 20: QDAddQy
                "\"QDWSHENG_DD\" TEXT," + // 21: QDWShengDd
                "\"QDWSHI_DD\" TEXT," + // 22: QDWShiDd
                "\"QDWXIAN_DD\" TEXT," + // 23: QDWXianDd
                "\"QDWXSQ_DD\" TEXT," + // 24: QDWXsqDd
                "\"QDWXIANG_DD\" TEXT," + // 25: QDWXiangDd
                "\"QDWCUN_DD\" TEXT," + // 26: QDWCunDd
                "\"QDWTYPE_DD\" TEXT," + // 27: QDWTypeDd
                "\"QDWADD_DD\" TEXT," + // 28: QDWAddDd
                "\"QDWCHENG_YUN_REN\" TEXT," + // 29: QDWChengYunRen
                "\"QDWCYR_DIAN_HUA\" TEXT," + // 30: QDWCyrDianHua
                "\"QDWYUN_ZAI\" TEXT," + // 31: QDWYunZai
                "\"QDWTRADEMARK\" TEXT," + // 32: QDWTrademark
                "\"QDWDISINFECTION\" TEXT," + // 33: QDWDisinfection
                "\"QDWER_BIAO_HAO\" TEXT," + // 34: QDWErBiaoHao
                "\"DATE_QF\" TEXT," + // 35: DateQF
                "\"DATE_QY\" TEXT," + // 36: DateQy
                "\"FSM5\" TEXT," + // 37: FSm5
                "\"HIGHWAY\" TEXT," + // 38: Highway
                "\"RAILWAY\" TEXT," + // 39: Railway
                "\"WATERWAY\" TEXT," + // 40: Waterway
                "\"AVIATION\" TEXT," + // 41: Aviation
                "\"QDWACCEPTED\" TEXT," + // 42: QDWAccepted
                "\"QDWADDRESS\" TEXT," + // 43: QDWAddress
                "\"QDWLI_YOU\" TEXT," + // 44: QDWLiYou
                "\"QDWATTN\" TEXT," + // 45: QDWAttn
                "\"QDWJBRDIAN_HUA\" TEXT," + // 46: QDWJBRDianHua
                "\"DATE_NPY\" TEXT," + // 47: DateNpy
                "\"DATE_JL\" TEXT," + // 48: DateJL
                "\"QRESULTS\" TEXT," + // 49: QResults
                "\"QREMARKS\" TEXT," + // 50: QRemarks
                "\"QLMSNUMBER\" INTEGER NOT NULL ," + // 51: QLMSNumber
                "\"QCHYIN\" INTEGER NOT NULL ," + // 52: QCHYin
                "\"QCHYANG\" INTEGER NOT NULL ," + // 53: QCHYang
                "\"QPAYLEAN_YIN\" INTEGER NOT NULL ," + // 54: QPayleanYin
                "\"QPAYLEAN_YANG\" INTEGER NOT NULL ," + // 55: QPayleanYang
                "\"QSALBUTAMOL_YIN\" INTEGER NOT NULL ," + // 56: QsalbutamolYin
                "\"QSALBUTAMOL_YANG\" INTEGER NOT NULL ," + // 57: QsalbutamolYang
                "\"FLONGITUDE\" REAL," + // 58: FLongitude
                "\"FLATITUDE\" REAL," + // 59: FLatitude
                "\"FLNAME\" TEXT," + // 60: FLName
                "\"GPSUNIT_USTR_ID\" TEXT," + // 61: GPSunitUstrId
                "\"IS_PRANT\" TEXT," + // 62: IsPrant
                "\"FSUSER_NAME\" TEXT);"); // 63: FSuserName
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"AnimalApplyBean\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, AnimalApplyBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String FStId = entity.getFStId();
        if (FStId != null) {
            stmt.bindString(2, FStId);
        }
 
        String QDWType = entity.getQDWType();
        if (QDWType != null) {
            stmt.bindString(3, QDWType);
        }
 
        String QDWNumber = entity.getQDWNumber();
        if (QDWNumber != null) {
            stmt.bindString(4, QDWNumber);
        }
 
        String QDWCargoOwner = entity.getQDWCargoOwner();
        if (QDWCargoOwner != null) {
            stmt.bindString(5, QDWCargoOwner);
        }
 
        String QDWPhone = entity.getQDWPhone();
        if (QDWPhone != null) {
            stmt.bindString(6, QDWPhone);
        }
 
        String QDWXuZhong = entity.getQDWXuZhong();
        if (QDWXuZhong != null) {
            stmt.bindString(7, QDWXuZhong);
        }
 
        String QDWXuZhongOne = entity.getQDWXuZhongOne();
        if (QDWXuZhongOne != null) {
            stmt.bindString(8, QDWXuZhongOne);
        }
 
        String QDWXuZhongTwo = entity.getQDWXuZhongTwo();
        if (QDWXuZhongTwo != null) {
            stmt.bindString(9, QDWXuZhongTwo);
        }
        stmt.bindLong(10, entity.getQDWQuantity());
 
        String FSmemo1 = entity.getFSmemo1();
        if (FSmemo1 != null) {
            stmt.bindString(11, FSmemo1);
        }
 
        String QDWDanWei = entity.getQDWDanWei();
        if (QDWDanWei != null) {
            stmt.bindString(12, QDWDanWei);
        }
 
        String QDWYongTu = entity.getQDWYongTu();
        if (QDWYongTu != null) {
            stmt.bindString(13, QDWYongTu);
        }
 
        String QDWLaiYuan = entity.getQDWLaiYuan();
        if (QDWLaiYuan != null) {
            stmt.bindString(14, QDWLaiYuan);
        }
 
        String QDWShengQy = entity.getQDWShengQy();
        if (QDWShengQy != null) {
            stmt.bindString(15, QDWShengQy);
        }
 
        String QDWShiQy = entity.getQDWShiQy();
        if (QDWShiQy != null) {
            stmt.bindString(16, QDWShiQy);
        }
 
        String QDWXianQy = entity.getQDWXianQy();
        if (QDWXianQy != null) {
            stmt.bindString(17, QDWXianQy);
        }
 
        String QDWXiangQy = entity.getQDWXiangQy();
        if (QDWXiangQy != null) {
            stmt.bindString(18, QDWXiangQy);
        }
 
        String QDWCunQy = entity.getQDWCunQy();
        if (QDWCunQy != null) {
            stmt.bindString(19, QDWCunQy);
        }
 
        String QDWTypeQy = entity.getQDWTypeQy();
        if (QDWTypeQy != null) {
            stmt.bindString(20, QDWTypeQy);
        }
 
        String QDAddQy = entity.getQDAddQy();
        if (QDAddQy != null) {
            stmt.bindString(21, QDAddQy);
        }
 
        String QDWShengDd = entity.getQDWShengDd();
        if (QDWShengDd != null) {
            stmt.bindString(22, QDWShengDd);
        }
 
        String QDWShiDd = entity.getQDWShiDd();
        if (QDWShiDd != null) {
            stmt.bindString(23, QDWShiDd);
        }
 
        String QDWXianDd = entity.getQDWXianDd();
        if (QDWXianDd != null) {
            stmt.bindString(24, QDWXianDd);
        }
 
        String QDWXsqDd = entity.getQDWXsqDd();
        if (QDWXsqDd != null) {
            stmt.bindString(25, QDWXsqDd);
        }
 
        String QDWXiangDd = entity.getQDWXiangDd();
        if (QDWXiangDd != null) {
            stmt.bindString(26, QDWXiangDd);
        }
 
        String QDWCunDd = entity.getQDWCunDd();
        if (QDWCunDd != null) {
            stmt.bindString(27, QDWCunDd);
        }
 
        String QDWTypeDd = entity.getQDWTypeDd();
        if (QDWTypeDd != null) {
            stmt.bindString(28, QDWTypeDd);
        }
 
        String QDWAddDd = entity.getQDWAddDd();
        if (QDWAddDd != null) {
            stmt.bindString(29, QDWAddDd);
        }
 
        String QDWChengYunRen = entity.getQDWChengYunRen();
        if (QDWChengYunRen != null) {
            stmt.bindString(30, QDWChengYunRen);
        }
 
        String QDWCyrDianHua = entity.getQDWCyrDianHua();
        if (QDWCyrDianHua != null) {
            stmt.bindString(31, QDWCyrDianHua);
        }
 
        String QDWYunZai = entity.getQDWYunZai();
        if (QDWYunZai != null) {
            stmt.bindString(32, QDWYunZai);
        }
 
        String QDWTrademark = entity.getQDWTrademark();
        if (QDWTrademark != null) {
            stmt.bindString(33, QDWTrademark);
        }
 
        String QDWDisinfection = entity.getQDWDisinfection();
        if (QDWDisinfection != null) {
            stmt.bindString(34, QDWDisinfection);
        }
 
        String QDWErBiaoHao = entity.getQDWErBiaoHao();
        if (QDWErBiaoHao != null) {
            stmt.bindString(35, QDWErBiaoHao);
        }
 
        String DateQF = entity.getDateQF();
        if (DateQF != null) {
            stmt.bindString(36, DateQF);
        }
 
        String DateQy = entity.getDateQy();
        if (DateQy != null) {
            stmt.bindString(37, DateQy);
        }
 
        String FSm5 = entity.getFSm5();
        if (FSm5 != null) {
            stmt.bindString(38, FSm5);
        }
 
        String Highway = entity.getHighway();
        if (Highway != null) {
            stmt.bindString(39, Highway);
        }
 
        String Railway = entity.getRailway();
        if (Railway != null) {
            stmt.bindString(40, Railway);
        }
 
        String Waterway = entity.getWaterway();
        if (Waterway != null) {
            stmt.bindString(41, Waterway);
        }
 
        String Aviation = entity.getAviation();
        if (Aviation != null) {
            stmt.bindString(42, Aviation);
        }
 
        String QDWAccepted = entity.getQDWAccepted();
        if (QDWAccepted != null) {
            stmt.bindString(43, QDWAccepted);
        }
 
        String QDWAddress = entity.getQDWAddress();
        if (QDWAddress != null) {
            stmt.bindString(44, QDWAddress);
        }
 
        String QDWLiYou = entity.getQDWLiYou();
        if (QDWLiYou != null) {
            stmt.bindString(45, QDWLiYou);
        }
 
        String QDWAttn = entity.getQDWAttn();
        if (QDWAttn != null) {
            stmt.bindString(46, QDWAttn);
        }
 
        String QDWJBRDianHua = entity.getQDWJBRDianHua();
        if (QDWJBRDianHua != null) {
            stmt.bindString(47, QDWJBRDianHua);
        }
 
        String DateNpy = entity.getDateNpy();
        if (DateNpy != null) {
            stmt.bindString(48, DateNpy);
        }
 
        String DateJL = entity.getDateJL();
        if (DateJL != null) {
            stmt.bindString(49, DateJL);
        }
 
        String QResults = entity.getQResults();
        if (QResults != null) {
            stmt.bindString(50, QResults);
        }
 
        String QRemarks = entity.getQRemarks();
        if (QRemarks != null) {
            stmt.bindString(51, QRemarks);
        }
        stmt.bindLong(52, entity.getQLMSNumber());
        stmt.bindLong(53, entity.getQCHYin());
        stmt.bindLong(54, entity.getQCHYang());
        stmt.bindLong(55, entity.getQPayleanYin());
        stmt.bindLong(56, entity.getQPayleanYang());
        stmt.bindLong(57, entity.getQsalbutamolYin());
        stmt.bindLong(58, entity.getQsalbutamolYang());
 
        Double FLongitude = entity.getFLongitude();
        if (FLongitude != null) {
            stmt.bindDouble(59, FLongitude);
        }
 
        Double FLatitude = entity.getFLatitude();
        if (FLatitude != null) {
            stmt.bindDouble(60, FLatitude);
        }
 
        String FLName = entity.getFLName();
        if (FLName != null) {
            stmt.bindString(61, FLName);
        }
 
        String GPSunitUstrId = entity.getGPSunitUstrId();
        if (GPSunitUstrId != null) {
            stmt.bindString(62, GPSunitUstrId);
        }
 
        String IsPrant = entity.getIsPrant();
        if (IsPrant != null) {
            stmt.bindString(63, IsPrant);
        }
 
        String FSuserName = entity.getFSuserName();
        if (FSuserName != null) {
            stmt.bindString(64, FSuserName);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, AnimalApplyBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String FStId = entity.getFStId();
        if (FStId != null) {
            stmt.bindString(2, FStId);
        }
 
        String QDWType = entity.getQDWType();
        if (QDWType != null) {
            stmt.bindString(3, QDWType);
        }
 
        String QDWNumber = entity.getQDWNumber();
        if (QDWNumber != null) {
            stmt.bindString(4, QDWNumber);
        }
 
        String QDWCargoOwner = entity.getQDWCargoOwner();
        if (QDWCargoOwner != null) {
            stmt.bindString(5, QDWCargoOwner);
        }
 
        String QDWPhone = entity.getQDWPhone();
        if (QDWPhone != null) {
            stmt.bindString(6, QDWPhone);
        }
 
        String QDWXuZhong = entity.getQDWXuZhong();
        if (QDWXuZhong != null) {
            stmt.bindString(7, QDWXuZhong);
        }
 
        String QDWXuZhongOne = entity.getQDWXuZhongOne();
        if (QDWXuZhongOne != null) {
            stmt.bindString(8, QDWXuZhongOne);
        }
 
        String QDWXuZhongTwo = entity.getQDWXuZhongTwo();
        if (QDWXuZhongTwo != null) {
            stmt.bindString(9, QDWXuZhongTwo);
        }
        stmt.bindLong(10, entity.getQDWQuantity());
 
        String FSmemo1 = entity.getFSmemo1();
        if (FSmemo1 != null) {
            stmt.bindString(11, FSmemo1);
        }
 
        String QDWDanWei = entity.getQDWDanWei();
        if (QDWDanWei != null) {
            stmt.bindString(12, QDWDanWei);
        }
 
        String QDWYongTu = entity.getQDWYongTu();
        if (QDWYongTu != null) {
            stmt.bindString(13, QDWYongTu);
        }
 
        String QDWLaiYuan = entity.getQDWLaiYuan();
        if (QDWLaiYuan != null) {
            stmt.bindString(14, QDWLaiYuan);
        }
 
        String QDWShengQy = entity.getQDWShengQy();
        if (QDWShengQy != null) {
            stmt.bindString(15, QDWShengQy);
        }
 
        String QDWShiQy = entity.getQDWShiQy();
        if (QDWShiQy != null) {
            stmt.bindString(16, QDWShiQy);
        }
 
        String QDWXianQy = entity.getQDWXianQy();
        if (QDWXianQy != null) {
            stmt.bindString(17, QDWXianQy);
        }
 
        String QDWXiangQy = entity.getQDWXiangQy();
        if (QDWXiangQy != null) {
            stmt.bindString(18, QDWXiangQy);
        }
 
        String QDWCunQy = entity.getQDWCunQy();
        if (QDWCunQy != null) {
            stmt.bindString(19, QDWCunQy);
        }
 
        String QDWTypeQy = entity.getQDWTypeQy();
        if (QDWTypeQy != null) {
            stmt.bindString(20, QDWTypeQy);
        }
 
        String QDAddQy = entity.getQDAddQy();
        if (QDAddQy != null) {
            stmt.bindString(21, QDAddQy);
        }
 
        String QDWShengDd = entity.getQDWShengDd();
        if (QDWShengDd != null) {
            stmt.bindString(22, QDWShengDd);
        }
 
        String QDWShiDd = entity.getQDWShiDd();
        if (QDWShiDd != null) {
            stmt.bindString(23, QDWShiDd);
        }
 
        String QDWXianDd = entity.getQDWXianDd();
        if (QDWXianDd != null) {
            stmt.bindString(24, QDWXianDd);
        }
 
        String QDWXsqDd = entity.getQDWXsqDd();
        if (QDWXsqDd != null) {
            stmt.bindString(25, QDWXsqDd);
        }
 
        String QDWXiangDd = entity.getQDWXiangDd();
        if (QDWXiangDd != null) {
            stmt.bindString(26, QDWXiangDd);
        }
 
        String QDWCunDd = entity.getQDWCunDd();
        if (QDWCunDd != null) {
            stmt.bindString(27, QDWCunDd);
        }
 
        String QDWTypeDd = entity.getQDWTypeDd();
        if (QDWTypeDd != null) {
            stmt.bindString(28, QDWTypeDd);
        }
 
        String QDWAddDd = entity.getQDWAddDd();
        if (QDWAddDd != null) {
            stmt.bindString(29, QDWAddDd);
        }
 
        String QDWChengYunRen = entity.getQDWChengYunRen();
        if (QDWChengYunRen != null) {
            stmt.bindString(30, QDWChengYunRen);
        }
 
        String QDWCyrDianHua = entity.getQDWCyrDianHua();
        if (QDWCyrDianHua != null) {
            stmt.bindString(31, QDWCyrDianHua);
        }
 
        String QDWYunZai = entity.getQDWYunZai();
        if (QDWYunZai != null) {
            stmt.bindString(32, QDWYunZai);
        }
 
        String QDWTrademark = entity.getQDWTrademark();
        if (QDWTrademark != null) {
            stmt.bindString(33, QDWTrademark);
        }
 
        String QDWDisinfection = entity.getQDWDisinfection();
        if (QDWDisinfection != null) {
            stmt.bindString(34, QDWDisinfection);
        }
 
        String QDWErBiaoHao = entity.getQDWErBiaoHao();
        if (QDWErBiaoHao != null) {
            stmt.bindString(35, QDWErBiaoHao);
        }
 
        String DateQF = entity.getDateQF();
        if (DateQF != null) {
            stmt.bindString(36, DateQF);
        }
 
        String DateQy = entity.getDateQy();
        if (DateQy != null) {
            stmt.bindString(37, DateQy);
        }
 
        String FSm5 = entity.getFSm5();
        if (FSm5 != null) {
            stmt.bindString(38, FSm5);
        }
 
        String Highway = entity.getHighway();
        if (Highway != null) {
            stmt.bindString(39, Highway);
        }
 
        String Railway = entity.getRailway();
        if (Railway != null) {
            stmt.bindString(40, Railway);
        }
 
        String Waterway = entity.getWaterway();
        if (Waterway != null) {
            stmt.bindString(41, Waterway);
        }
 
        String Aviation = entity.getAviation();
        if (Aviation != null) {
            stmt.bindString(42, Aviation);
        }
 
        String QDWAccepted = entity.getQDWAccepted();
        if (QDWAccepted != null) {
            stmt.bindString(43, QDWAccepted);
        }
 
        String QDWAddress = entity.getQDWAddress();
        if (QDWAddress != null) {
            stmt.bindString(44, QDWAddress);
        }
 
        String QDWLiYou = entity.getQDWLiYou();
        if (QDWLiYou != null) {
            stmt.bindString(45, QDWLiYou);
        }
 
        String QDWAttn = entity.getQDWAttn();
        if (QDWAttn != null) {
            stmt.bindString(46, QDWAttn);
        }
 
        String QDWJBRDianHua = entity.getQDWJBRDianHua();
        if (QDWJBRDianHua != null) {
            stmt.bindString(47, QDWJBRDianHua);
        }
 
        String DateNpy = entity.getDateNpy();
        if (DateNpy != null) {
            stmt.bindString(48, DateNpy);
        }
 
        String DateJL = entity.getDateJL();
        if (DateJL != null) {
            stmt.bindString(49, DateJL);
        }
 
        String QResults = entity.getQResults();
        if (QResults != null) {
            stmt.bindString(50, QResults);
        }
 
        String QRemarks = entity.getQRemarks();
        if (QRemarks != null) {
            stmt.bindString(51, QRemarks);
        }
        stmt.bindLong(52, entity.getQLMSNumber());
        stmt.bindLong(53, entity.getQCHYin());
        stmt.bindLong(54, entity.getQCHYang());
        stmt.bindLong(55, entity.getQPayleanYin());
        stmt.bindLong(56, entity.getQPayleanYang());
        stmt.bindLong(57, entity.getQsalbutamolYin());
        stmt.bindLong(58, entity.getQsalbutamolYang());
 
        Double FLongitude = entity.getFLongitude();
        if (FLongitude != null) {
            stmt.bindDouble(59, FLongitude);
        }
 
        Double FLatitude = entity.getFLatitude();
        if (FLatitude != null) {
            stmt.bindDouble(60, FLatitude);
        }
 
        String FLName = entity.getFLName();
        if (FLName != null) {
            stmt.bindString(61, FLName);
        }
 
        String GPSunitUstrId = entity.getGPSunitUstrId();
        if (GPSunitUstrId != null) {
            stmt.bindString(62, GPSunitUstrId);
        }
 
        String IsPrant = entity.getIsPrant();
        if (IsPrant != null) {
            stmt.bindString(63, IsPrant);
        }
 
        String FSuserName = entity.getFSuserName();
        if (FSuserName != null) {
            stmt.bindString(64, FSuserName);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public AnimalApplyBean readEntity(Cursor cursor, int offset) {
        AnimalApplyBean entity = new AnimalApplyBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // FStId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // QDWType
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // QDWNumber
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // QDWCargoOwner
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // QDWPhone
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // QDWXuZhong
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // QDWXuZhongOne
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // QDWXuZhongTwo
            cursor.getInt(offset + 9), // QDWQuantity
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // FSmemo1
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // QDWDanWei
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // QDWYongTu
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // QDWLaiYuan
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // QDWShengQy
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // QDWShiQy
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // QDWXianQy
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // QDWXiangQy
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // QDWCunQy
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // QDWTypeQy
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // QDAddQy
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // QDWShengDd
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // QDWShiDd
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // QDWXianDd
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // QDWXsqDd
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // QDWXiangDd
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // QDWCunDd
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // QDWTypeDd
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // QDWAddDd
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // QDWChengYunRen
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // QDWCyrDianHua
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // QDWYunZai
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // QDWTrademark
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // QDWDisinfection
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // QDWErBiaoHao
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // DateQF
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // DateQy
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // FSm5
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // Highway
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // Railway
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // Waterway
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // Aviation
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // QDWAccepted
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // QDWAddress
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // QDWLiYou
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // QDWAttn
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // QDWJBRDianHua
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // DateNpy
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // DateJL
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // QResults
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // QRemarks
            cursor.getInt(offset + 51), // QLMSNumber
            cursor.getInt(offset + 52), // QCHYin
            cursor.getInt(offset + 53), // QCHYang
            cursor.getInt(offset + 54), // QPayleanYin
            cursor.getInt(offset + 55), // QPayleanYang
            cursor.getInt(offset + 56), // QsalbutamolYin
            cursor.getInt(offset + 57), // QsalbutamolYang
            cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58), // FLongitude
            cursor.isNull(offset + 59) ? null : cursor.getDouble(offset + 59), // FLatitude
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // FLName
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // GPSunitUstrId
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // IsPrant
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63) // FSuserName
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, AnimalApplyBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFStId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setQDWType(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setQDWNumber(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setQDWCargoOwner(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setQDWPhone(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setQDWXuZhong(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setQDWXuZhongOne(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setQDWXuZhongTwo(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setQDWQuantity(cursor.getInt(offset + 9));
        entity.setFSmemo1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setQDWDanWei(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setQDWYongTu(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setQDWLaiYuan(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setQDWShengQy(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setQDWShiQy(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setQDWXianQy(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setQDWXiangQy(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setQDWCunQy(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setQDWTypeQy(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setQDAddQy(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setQDWShengDd(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setQDWShiDd(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setQDWXianDd(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setQDWXsqDd(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setQDWXiangDd(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setQDWCunDd(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setQDWTypeDd(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setQDWAddDd(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setQDWChengYunRen(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setQDWCyrDianHua(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setQDWYunZai(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setQDWTrademark(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setQDWDisinfection(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setQDWErBiaoHao(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setDateQF(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setDateQy(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFSm5(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setHighway(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setRailway(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setWaterway(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setAviation(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setQDWAccepted(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setQDWAddress(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setQDWLiYou(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setQDWAttn(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setQDWJBRDianHua(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setDateNpy(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setDateJL(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setQResults(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setQRemarks(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setQLMSNumber(cursor.getInt(offset + 51));
        entity.setQCHYin(cursor.getInt(offset + 52));
        entity.setQCHYang(cursor.getInt(offset + 53));
        entity.setQPayleanYin(cursor.getInt(offset + 54));
        entity.setQPayleanYang(cursor.getInt(offset + 55));
        entity.setQsalbutamolYin(cursor.getInt(offset + 56));
        entity.setQsalbutamolYang(cursor.getInt(offset + 57));
        entity.setFLongitude(cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58));
        entity.setFLatitude(cursor.isNull(offset + 59) ? null : cursor.getDouble(offset + 59));
        entity.setFLName(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setGPSunitUstrId(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setIsPrant(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setFSuserName(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(AnimalApplyBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(AnimalApplyBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(AnimalApplyBean entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
