package com.mingnong.xizangphone.dao.local;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.mingnong.xizangphone.dao.Animal_A;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "AnimalA".
*/
public class Animal_ADao extends AbstractDao<Animal_A, Long> {

    public static final String TABLENAME = "AnimalA";

    /**
     * Properties of entity Animal_A.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property TId = new Property(0, Long.class, "tId", true, "_id");
        public final static Property Zt = new Property(1, String.class, "zt", false, "ZT");
        public final static Property Id = new Property(2, String.class, "Id", false, "id");
        public final static Property Glid = new Property(3, int.class, "glid", false, "GLID");
        public final static Property Shipper = new Property(4, String.class, "Shipper", false, "SHIPPER");
        public final static Property Shipper_phone = new Property(5, String.class, "Shipper_phone", false, "SHIPPER_PHONE");
        public final static Property Animal_species = new Property(6, String.class, "animal_species", false, "ANIMAL_SPECIES");
        public final static Property Animal_species1 = new Property(7, String.class, "animal_species1", false, "ANIMAL_SPECIES1");
        public final static Property Animal_species2 = new Property(8, String.class, "animal_species2", false, "ANIMAL_SPECIES2");
        public final static Property PQuantity = new Property(9, String.class, "PQuantity", false, "PQUANTITY");
        public final static Property Input_PDanWei = new Property(10, String.class, "input_PDanWei", false, "INPUT__PDAN_WEI");
        public final static Property Province = new Property(11, String.class, "Province", false, "PROVINCE");
        public final static Property City = new Property(12, String.class, "City", false, "CITY");
        public final static Property County = new Property(13, String.class, "County", false, "COUNTY");
        public final static Property Town = new Property(14, String.class, "Town", false, "TOWN");
        public final static Property Village = new Property(15, String.class, "Village", false, "VILLAGE");
        public final static Property Input_market = new Property(16, String.class, "Input_market", false, "INPUT_MARKET");
        public final static Property Province1 = new Property(17, String.class, "Province1", false, "PROVINCE1");
        public final static Property City1 = new Property(18, String.class, "City1", false, "CITY1");
        public final static Property County1 = new Property(19, String.class, "County1", false, "COUNTY1");
        public final static Property Town1 = new Property(20, String.class, "Town1", false, "TOWN1");
        public final static Property Village1 = new Property(21, String.class, "Village1", false, "VILLAGE1");
        public final static Property Input_market1 = new Property(22, String.class, "Input_market1", false, "INPUT_MARKET1");
        public final static Property Usage = new Property(23, String.class, "Usage", false, "USAGE");
        public final static Property Carrier = new Property(24, String.class, "Carrier", false, "CARRIER");
        public final static Property Carrier_phone = new Property(25, String.class, "Carrier_phone", false, "CARRIER_PHONE");
        public final static Property QDWYunZai = new Property(26, String.class, "QDWYunZai", false, "QDWYUN_ZAI");
        public final static Property Highway = new Property(27, String.class, "Highway", false, "HIGHWAY");
        public final static Property Railway = new Property(28, String.class, "Railway", false, "RAILWAY");
        public final static Property Waterway = new Property(29, String.class, "Waterway", false, "WATERWAY");
        public final static Property Aviation = new Property(30, String.class, "Aviation", false, "AVIATION");
        public final static Property Vehicle_mark = new Property(31, String.class, "Vehicle_mark", false, "VEHICLE_MARK");
        public final static Property Disinfect = new Property(32, String.class, "Disinfect", false, "DISINFECT");
        public final static Property ETA = new Property(33, String.class, "ETA", false, "ETA");
        public final static Property Year = new Property(34, String.class, "Year", false, "YEAR");
        public final static Property Month = new Property(35, String.class, "Month", false, "MONTH");
        public final static Property Date = new Property(36, String.class, "Date", false, "DATE");
        public final static Property DateQF = new Property(37, String.class, "DateQF", false, "DATE_QF");
        public final static Property Beast_id = new Property(38, String.class, "Beast_id", false, "BEAST_ID");
        public final static Property Gfsy = new Property(39, String.class, "gfsy", false, "GFSY");
        public final static Property Remark = new Property(40, String.class, "Remark", false, "REMARK");
        public final static Property Supervise_Telephone = new Property(41, String.class, "Supervise_Telephone", false, "SUPERVISE__TELEPHONE");
        public final static Property IsPrant = new Property(42, String.class, "IsPrant", false, "IS_PRANT");
        public final static Property FSmemo1 = new Property(43, String.class, "FSmemo1", false, "FSMEMO1");
        public final static Property FSmemo2 = new Property(44, String.class, "FSmemo2", false, "FSMEMO2");
        public final static Property FSmemo3 = new Property(45, String.class, "FSmemo3", false, "FSMEMO3");
        public final static Property AVeterinary = new Property(46, String.class, "AVeterinary", false, "AVETERINARY");
        public final static Property FSm5 = new Property(47, String.class, "FSm5", false, "FSM5");
    }


    public Animal_ADao(DaoConfig config) {
        super(config);
    }
    
    public Animal_ADao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"AnimalA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: tId
                "\"ZT\" TEXT," + // 1: zt
                "\"id\" TEXT," + // 2: Id
                "\"GLID\" INTEGER NOT NULL ," + // 3: glid
                "\"SHIPPER\" TEXT," + // 4: Shipper
                "\"SHIPPER_PHONE\" TEXT," + // 5: Shipper_phone
                "\"ANIMAL_SPECIES\" TEXT," + // 6: animal_species
                "\"ANIMAL_SPECIES1\" TEXT," + // 7: animal_species1
                "\"ANIMAL_SPECIES2\" TEXT," + // 8: animal_species2
                "\"PQUANTITY\" TEXT," + // 9: PQuantity
                "\"INPUT__PDAN_WEI\" TEXT," + // 10: input_PDanWei
                "\"PROVINCE\" TEXT," + // 11: Province
                "\"CITY\" TEXT," + // 12: City
                "\"COUNTY\" TEXT," + // 13: County
                "\"TOWN\" TEXT," + // 14: Town
                "\"VILLAGE\" TEXT," + // 15: Village
                "\"INPUT_MARKET\" TEXT," + // 16: Input_market
                "\"PROVINCE1\" TEXT," + // 17: Province1
                "\"CITY1\" TEXT," + // 18: City1
                "\"COUNTY1\" TEXT," + // 19: County1
                "\"TOWN1\" TEXT," + // 20: Town1
                "\"VILLAGE1\" TEXT," + // 21: Village1
                "\"INPUT_MARKET1\" TEXT," + // 22: Input_market1
                "\"USAGE\" TEXT," + // 23: Usage
                "\"CARRIER\" TEXT," + // 24: Carrier
                "\"CARRIER_PHONE\" TEXT," + // 25: Carrier_phone
                "\"QDWYUN_ZAI\" TEXT," + // 26: QDWYunZai
                "\"HIGHWAY\" TEXT," + // 27: Highway
                "\"RAILWAY\" TEXT," + // 28: Railway
                "\"WATERWAY\" TEXT," + // 29: Waterway
                "\"AVIATION\" TEXT," + // 30: Aviation
                "\"VEHICLE_MARK\" TEXT," + // 31: Vehicle_mark
                "\"DISINFECT\" TEXT," + // 32: Disinfect
                "\"ETA\" TEXT," + // 33: ETA
                "\"YEAR\" TEXT," + // 34: Year
                "\"MONTH\" TEXT," + // 35: Month
                "\"DATE\" TEXT," + // 36: Date
                "\"DATE_QF\" TEXT," + // 37: DateQF
                "\"BEAST_ID\" TEXT," + // 38: Beast_id
                "\"GFSY\" TEXT," + // 39: gfsy
                "\"REMARK\" TEXT," + // 40: Remark
                "\"SUPERVISE__TELEPHONE\" TEXT," + // 41: Supervise_Telephone
                "\"IS_PRANT\" TEXT," + // 42: IsPrant
                "\"FSMEMO1\" TEXT," + // 43: FSmemo1
                "\"FSMEMO2\" TEXT," + // 44: FSmemo2
                "\"FSMEMO3\" TEXT," + // 45: FSmemo3
                "\"AVETERINARY\" TEXT," + // 46: AVeterinary
                "\"FSM5\" TEXT);"); // 47: FSm5
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"AnimalA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Animal_A entity) {
        stmt.clearBindings();
 
        Long tId = entity.getTId();
        if (tId != null) {
            stmt.bindLong(1, tId);
        }
 
        String zt = entity.getZt();
        if (zt != null) {
            stmt.bindString(2, zt);
        }
 
        String Id = entity.getId();
        if (Id != null) {
            stmt.bindString(3, Id);
        }
        stmt.bindLong(4, entity.getGlid());
 
        String Shipper = entity.getShipper();
        if (Shipper != null) {
            stmt.bindString(5, Shipper);
        }
 
        String Shipper_phone = entity.getShipper_phone();
        if (Shipper_phone != null) {
            stmt.bindString(6, Shipper_phone);
        }
 
        String animal_species = entity.getAnimal_species();
        if (animal_species != null) {
            stmt.bindString(7, animal_species);
        }
 
        String animal_species1 = entity.getAnimal_species1();
        if (animal_species1 != null) {
            stmt.bindString(8, animal_species1);
        }
 
        String animal_species2 = entity.getAnimal_species2();
        if (animal_species2 != null) {
            stmt.bindString(9, animal_species2);
        }
 
        String PQuantity = entity.getPQuantity();
        if (PQuantity != null) {
            stmt.bindString(10, PQuantity);
        }
 
        String input_PDanWei = entity.getInput_PDanWei();
        if (input_PDanWei != null) {
            stmt.bindString(11, input_PDanWei);
        }
 
        String Province = entity.getProvince();
        if (Province != null) {
            stmt.bindString(12, Province);
        }
 
        String City = entity.getCity();
        if (City != null) {
            stmt.bindString(13, City);
        }
 
        String County = entity.getCounty();
        if (County != null) {
            stmt.bindString(14, County);
        }
 
        String Town = entity.getTown();
        if (Town != null) {
            stmt.bindString(15, Town);
        }
 
        String Village = entity.getVillage();
        if (Village != null) {
            stmt.bindString(16, Village);
        }
 
        String Input_market = entity.getInput_market();
        if (Input_market != null) {
            stmt.bindString(17, Input_market);
        }
 
        String Province1 = entity.getProvince1();
        if (Province1 != null) {
            stmt.bindString(18, Province1);
        }
 
        String City1 = entity.getCity1();
        if (City1 != null) {
            stmt.bindString(19, City1);
        }
 
        String County1 = entity.getCounty1();
        if (County1 != null) {
            stmt.bindString(20, County1);
        }
 
        String Town1 = entity.getTown1();
        if (Town1 != null) {
            stmt.bindString(21, Town1);
        }
 
        String Village1 = entity.getVillage1();
        if (Village1 != null) {
            stmt.bindString(22, Village1);
        }
 
        String Input_market1 = entity.getInput_market1();
        if (Input_market1 != null) {
            stmt.bindString(23, Input_market1);
        }
 
        String Usage = entity.getUsage();
        if (Usage != null) {
            stmt.bindString(24, Usage);
        }
 
        String Carrier = entity.getCarrier();
        if (Carrier != null) {
            stmt.bindString(25, Carrier);
        }
 
        String Carrier_phone = entity.getCarrier_phone();
        if (Carrier_phone != null) {
            stmt.bindString(26, Carrier_phone);
        }
 
        String QDWYunZai = entity.getQDWYunZai();
        if (QDWYunZai != null) {
            stmt.bindString(27, QDWYunZai);
        }
 
        String Highway = entity.getHighway();
        if (Highway != null) {
            stmt.bindString(28, Highway);
        }
 
        String Railway = entity.getRailway();
        if (Railway != null) {
            stmt.bindString(29, Railway);
        }
 
        String Waterway = entity.getWaterway();
        if (Waterway != null) {
            stmt.bindString(30, Waterway);
        }
 
        String Aviation = entity.getAviation();
        if (Aviation != null) {
            stmt.bindString(31, Aviation);
        }
 
        String Vehicle_mark = entity.getVehicle_mark();
        if (Vehicle_mark != null) {
            stmt.bindString(32, Vehicle_mark);
        }
 
        String Disinfect = entity.getDisinfect();
        if (Disinfect != null) {
            stmt.bindString(33, Disinfect);
        }
 
        String ETA = entity.getETA();
        if (ETA != null) {
            stmt.bindString(34, ETA);
        }
 
        String Year = entity.getYear();
        if (Year != null) {
            stmt.bindString(35, Year);
        }
 
        String Month = entity.getMonth();
        if (Month != null) {
            stmt.bindString(36, Month);
        }
 
        String Date = entity.getDate();
        if (Date != null) {
            stmt.bindString(37, Date);
        }
 
        String DateQF = entity.getDateQF();
        if (DateQF != null) {
            stmt.bindString(38, DateQF);
        }
 
        String Beast_id = entity.getBeast_id();
        if (Beast_id != null) {
            stmt.bindString(39, Beast_id);
        }
 
        String gfsy = entity.getGfsy();
        if (gfsy != null) {
            stmt.bindString(40, gfsy);
        }
 
        String Remark = entity.getRemark();
        if (Remark != null) {
            stmt.bindString(41, Remark);
        }
 
        String Supervise_Telephone = entity.getSupervise_Telephone();
        if (Supervise_Telephone != null) {
            stmt.bindString(42, Supervise_Telephone);
        }
 
        String IsPrant = entity.getIsPrant();
        if (IsPrant != null) {
            stmt.bindString(43, IsPrant);
        }
 
        String FSmemo1 = entity.getFSmemo1();
        if (FSmemo1 != null) {
            stmt.bindString(44, FSmemo1);
        }
 
        String FSmemo2 = entity.getFSmemo2();
        if (FSmemo2 != null) {
            stmt.bindString(45, FSmemo2);
        }
 
        String FSmemo3 = entity.getFSmemo3();
        if (FSmemo3 != null) {
            stmt.bindString(46, FSmemo3);
        }
 
        String AVeterinary = entity.getAVeterinary();
        if (AVeterinary != null) {
            stmt.bindString(47, AVeterinary);
        }
 
        String FSm5 = entity.getFSm5();
        if (FSm5 != null) {
            stmt.bindString(48, FSm5);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Animal_A entity) {
        stmt.clearBindings();
 
        Long tId = entity.getTId();
        if (tId != null) {
            stmt.bindLong(1, tId);
        }
 
        String zt = entity.getZt();
        if (zt != null) {
            stmt.bindString(2, zt);
        }
 
        String Id = entity.getId();
        if (Id != null) {
            stmt.bindString(3, Id);
        }
        stmt.bindLong(4, entity.getGlid());
 
        String Shipper = entity.getShipper();
        if (Shipper != null) {
            stmt.bindString(5, Shipper);
        }
 
        String Shipper_phone = entity.getShipper_phone();
        if (Shipper_phone != null) {
            stmt.bindString(6, Shipper_phone);
        }
 
        String animal_species = entity.getAnimal_species();
        if (animal_species != null) {
            stmt.bindString(7, animal_species);
        }
 
        String animal_species1 = entity.getAnimal_species1();
        if (animal_species1 != null) {
            stmt.bindString(8, animal_species1);
        }
 
        String animal_species2 = entity.getAnimal_species2();
        if (animal_species2 != null) {
            stmt.bindString(9, animal_species2);
        }
 
        String PQuantity = entity.getPQuantity();
        if (PQuantity != null) {
            stmt.bindString(10, PQuantity);
        }
 
        String input_PDanWei = entity.getInput_PDanWei();
        if (input_PDanWei != null) {
            stmt.bindString(11, input_PDanWei);
        }
 
        String Province = entity.getProvince();
        if (Province != null) {
            stmt.bindString(12, Province);
        }
 
        String City = entity.getCity();
        if (City != null) {
            stmt.bindString(13, City);
        }
 
        String County = entity.getCounty();
        if (County != null) {
            stmt.bindString(14, County);
        }
 
        String Town = entity.getTown();
        if (Town != null) {
            stmt.bindString(15, Town);
        }
 
        String Village = entity.getVillage();
        if (Village != null) {
            stmt.bindString(16, Village);
        }
 
        String Input_market = entity.getInput_market();
        if (Input_market != null) {
            stmt.bindString(17, Input_market);
        }
 
        String Province1 = entity.getProvince1();
        if (Province1 != null) {
            stmt.bindString(18, Province1);
        }
 
        String City1 = entity.getCity1();
        if (City1 != null) {
            stmt.bindString(19, City1);
        }
 
        String County1 = entity.getCounty1();
        if (County1 != null) {
            stmt.bindString(20, County1);
        }
 
        String Town1 = entity.getTown1();
        if (Town1 != null) {
            stmt.bindString(21, Town1);
        }
 
        String Village1 = entity.getVillage1();
        if (Village1 != null) {
            stmt.bindString(22, Village1);
        }
 
        String Input_market1 = entity.getInput_market1();
        if (Input_market1 != null) {
            stmt.bindString(23, Input_market1);
        }
 
        String Usage = entity.getUsage();
        if (Usage != null) {
            stmt.bindString(24, Usage);
        }
 
        String Carrier = entity.getCarrier();
        if (Carrier != null) {
            stmt.bindString(25, Carrier);
        }
 
        String Carrier_phone = entity.getCarrier_phone();
        if (Carrier_phone != null) {
            stmt.bindString(26, Carrier_phone);
        }
 
        String QDWYunZai = entity.getQDWYunZai();
        if (QDWYunZai != null) {
            stmt.bindString(27, QDWYunZai);
        }
 
        String Highway = entity.getHighway();
        if (Highway != null) {
            stmt.bindString(28, Highway);
        }
 
        String Railway = entity.getRailway();
        if (Railway != null) {
            stmt.bindString(29, Railway);
        }
 
        String Waterway = entity.getWaterway();
        if (Waterway != null) {
            stmt.bindString(30, Waterway);
        }
 
        String Aviation = entity.getAviation();
        if (Aviation != null) {
            stmt.bindString(31, Aviation);
        }
 
        String Vehicle_mark = entity.getVehicle_mark();
        if (Vehicle_mark != null) {
            stmt.bindString(32, Vehicle_mark);
        }
 
        String Disinfect = entity.getDisinfect();
        if (Disinfect != null) {
            stmt.bindString(33, Disinfect);
        }
 
        String ETA = entity.getETA();
        if (ETA != null) {
            stmt.bindString(34, ETA);
        }
 
        String Year = entity.getYear();
        if (Year != null) {
            stmt.bindString(35, Year);
        }
 
        String Month = entity.getMonth();
        if (Month != null) {
            stmt.bindString(36, Month);
        }
 
        String Date = entity.getDate();
        if (Date != null) {
            stmt.bindString(37, Date);
        }
 
        String DateQF = entity.getDateQF();
        if (DateQF != null) {
            stmt.bindString(38, DateQF);
        }
 
        String Beast_id = entity.getBeast_id();
        if (Beast_id != null) {
            stmt.bindString(39, Beast_id);
        }
 
        String gfsy = entity.getGfsy();
        if (gfsy != null) {
            stmt.bindString(40, gfsy);
        }
 
        String Remark = entity.getRemark();
        if (Remark != null) {
            stmt.bindString(41, Remark);
        }
 
        String Supervise_Telephone = entity.getSupervise_Telephone();
        if (Supervise_Telephone != null) {
            stmt.bindString(42, Supervise_Telephone);
        }
 
        String IsPrant = entity.getIsPrant();
        if (IsPrant != null) {
            stmt.bindString(43, IsPrant);
        }
 
        String FSmemo1 = entity.getFSmemo1();
        if (FSmemo1 != null) {
            stmt.bindString(44, FSmemo1);
        }
 
        String FSmemo2 = entity.getFSmemo2();
        if (FSmemo2 != null) {
            stmt.bindString(45, FSmemo2);
        }
 
        String FSmemo3 = entity.getFSmemo3();
        if (FSmemo3 != null) {
            stmt.bindString(46, FSmemo3);
        }
 
        String AVeterinary = entity.getAVeterinary();
        if (AVeterinary != null) {
            stmt.bindString(47, AVeterinary);
        }
 
        String FSm5 = entity.getFSm5();
        if (FSm5 != null) {
            stmt.bindString(48, FSm5);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Animal_A readEntity(Cursor cursor, int offset) {
        Animal_A entity = new Animal_A( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // tId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // zt
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Id
            cursor.getInt(offset + 3), // glid
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // Shipper
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // Shipper_phone
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // animal_species
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // animal_species1
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // animal_species2
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // PQuantity
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // input_PDanWei
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // Province
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // City
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // County
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // Town
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // Village
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // Input_market
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // Province1
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // City1
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // County1
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // Town1
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // Village1
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // Input_market1
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // Usage
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // Carrier
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // Carrier_phone
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // QDWYunZai
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // Highway
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // Railway
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // Waterway
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // Aviation
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // Vehicle_mark
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // Disinfect
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // ETA
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // Year
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // Month
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // Date
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // DateQF
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // Beast_id
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // gfsy
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // Remark
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // Supervise_Telephone
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // IsPrant
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // FSmemo1
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // FSmemo2
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // FSmemo3
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // AVeterinary
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47) // FSm5
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Animal_A entity, int offset) {
        entity.setTId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setZt(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGlid(cursor.getInt(offset + 3));
        entity.setShipper(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setShipper_phone(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAnimal_species(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAnimal_species1(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAnimal_species2(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setPQuantity(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setInput_PDanWei(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setProvince(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCity(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setCounty(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setTown(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setVillage(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setInput_market(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setProvince1(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setCity1(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setCounty1(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setTown1(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setVillage1(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setInput_market1(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setUsage(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setCarrier(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setCarrier_phone(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setQDWYunZai(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setHighway(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setRailway(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setWaterway(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setAviation(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setVehicle_mark(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setDisinfect(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setETA(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setYear(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setMonth(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setDate(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setDateQF(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setBeast_id(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setGfsy(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setRemark(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setSupervise_Telephone(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setIsPrant(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setFSmemo1(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setFSmemo2(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setFSmemo3(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setAVeterinary(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setFSm5(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Animal_A entity, long rowId) {
        entity.setTId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Animal_A entity) {
        if(entity != null) {
            return entity.getTId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Animal_A entity) {
        return entity.getTId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
